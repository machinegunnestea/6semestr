{"ast":null,"code":"var _jsxFileName = \"D:\\\\uni\\\\6sem\\\\\\u0420\\u041F\\u0418\\\\labs\\\\lab6-react\\\\src\\\\components\\\\Posts\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s();\n  let {\n    count,\n    limit\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts?_page=${currentPage}&_limit=${limit}`).then(response => response.json()).then(data => setPosts(data));\n  }, [currentPage]);\n  const totalPages = Math.ceil(count / limit);\n  const handlePrevious = () => {\n    setCurrentPage(currentPage - 1);\n  };\n  const handleNext = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  const buttons = [];\n  for (let i = 1; i <= totalPages; i++) {\n    buttons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentPage(i),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), posts.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        id: post.id,\n        title: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0438\\u0433\\u043D\\u0443\\u0442 \\u043B\\u0438\\u043C\\u0438\\u0442 \\u043F\\u043E \\u043F\\u043E\\u0441\\u0442\\u0430\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentPage === 1,\n        children: \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0430\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), buttons, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentPage === totalPages,\n        children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0430\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"b8we1wbR96U+I36nMUqHsUnE/wQ=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","Post","jsxDEV","_jsxDEV","Posts","_ref","_s","count","limit","posts","setPosts","currentPage","setCurrentPage","fetch","then","response","json","data","totalPages","Math","ceil","handlePrevious","handleNext","buttons","i","push","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","id","title","disabled","_c","$RefreshReg$"],"sources":["D:/uni/6sem/РПИ/labs/lab6-react/src/components/Posts/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nfunction Posts({ count, limit }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://jsonplaceholder.typicode.com/posts?_page=${currentPage}&_limit=${limit}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setPosts(data));\r\n  }, [currentPage]);\r\n\r\n  const totalPages = Math.ceil(count / limit);\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n  \r\n  const buttons = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    buttons.push(\r\n      <button key={i} onClick={() => setCurrentPage(i)}>\r\n        <span>{i}</span>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <p>Отображение постов:</p>\r\n      {posts.length ? (\r\n        <div>{\r\n          posts.map((post) => (\r\n            <Post id={post.id} title={post.title}/>\r\n          ))\r\n          }</div>\r\n      ) : (\r\n        <div>\r\n          <p>Достигнут лимит по постам</p>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <button onClick={handlePrevious} disabled={currentPage === 1}>\r\n          Предыдущая\r\n        </button>\r\n\r\n        {buttons}\r\n        <button onClick={handleNext} disabled={currentPage === totalPages}>\r\n        Следующая\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}